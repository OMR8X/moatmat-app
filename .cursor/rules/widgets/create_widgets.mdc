---
description: WHENEVER creating new widgets
globs: 
alwaysApply: false
---
Scope
- Widgets under Presentation/{Feature}/Widgets only

Main Widget (widget you are creating)
- One public StatelessWidget per file
- Use const constructors if possible
- Separate UI with private methods or private widget classes
- File: snake_case.dart, Class: PascalCase


Separating:
separate the main widgetâ€™s content into smaller widgets to improve readability, maintainability, and testability

Main Widget Separation Types (whenever you nead to sep)
- Private method (_buildX): small, no params, clarity only
- Widget variable (final x = Widget()): reused static parts
- Private class (_X): large, reused, with params or logic

Example (Private class):
class FooWidget {
  Widget build(c)=>Column(children:[_FooHeader(), _FooBody()]);
}
class _FooHeader{
  Widget build(c){...};
}
class _FooBody{
  Widget build(c){...};
}




Decision Guide
Use Case                 | Method | Variable | Class
-------------------------|--------|----------|------
Simple layout            | Yes    | No       | No
Reused static            | No     | Yes      | No
Complex/large            | No     | No       | Yes
Needs params or logic    | No     | No       | Yes
Improve clarity          | Yes    | No       | No
Multiple uses same file  | No     | Yes      | Yes


Do Not
- Extract widgets outside file
- Mix business logic in UI
- Use magic numbers/strings
- Nest widgets unnecessarily
